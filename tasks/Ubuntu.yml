---
- name: add k8s apt-key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: add k8s apt repository
  apt_repository:
    repo: 'deb https://apt.kubernetes.io/ kubernetes-xenial main'
    state: present
    filename: kubernetes
    update_cache: yes

- name: apt install tools
  apt:
    name: "{{ packages }}"
    update_cache: yes
    cache_valid_time: 3600
  vars:
    packages:
      - apt-transport-https
      - curl
      - vim
      - jq

- name: apt install k8s
  apt:
    name: "{{ packages }}"
    update_cache: yes
    cache_valid_time: 3600
  vars:
    packages:
      - kubelet
      - kubeadm
      - kubectl
      - docker-ce

- name: hold packages
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubeadm
    - kubectl
    - docker-ce

- name: add kernel parameters and reload
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
    ignoreerrors: yes
    sysctl_file: /etc/sysctl.d/k8s.conf
  with_items:
    - name: net.bridge.bridge-nf-call-ip6tables
      value: 1
    - name: net.bridge.bridge-nf-call-iptables
      value: 1
    - name: net.ipv4.ip_forward
      value: 1
    - name: vm.swappiness
      value: 0

- name: systemd start docker
  systemd:
    name: docker
    state: started

- name: add modules
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - ip_vs_rr
    - ip_vs_wrr
    - ip_vs_sh
    - ip_vs

- name: Remove swapfile from /etc/fstab
  mount:
    name: swap
    fstype: swap
    state: absent

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- block:
    - name: get ipv4 address
      command: bash -c "/sbin/ip -f inet -o addr show | grep {{ kubernetes_virtualbox_network }} | awk \{'print $4'\} | cut -d/ -f 1"
      register: get_ipv4_address
      check_mode: no
      changed_when: false

    - name: put /etc/default/kubelet
      template:
        src: kubelet
        dest: /etc/default/kubelet
        owner: root
        group: root
        mode: 0644
      when: get_ipv4_address
      notify: restart kubelet
  when: kubernetes_virtualbox_flag

# masterノードの場合の処理
- block:
    - name: get ipv4 address
      command: bash -c "/sbin/ip -f inet -o addr show | grep {{ kubernetes_master_network }} | awk \{'print $4'\} | cut -d/ -f 1"
      register: get_ipv4_address
      check_mode: no
      changed_when: false

    # kubernetesのインストールを確認する
    - name: Confirm installation of kubernetes
      stat:
        path: "/etc/kubernetes/admin.conf"
      register: kubernetes_state

    - block:
        - name: put /tmp/kubeadm-config.yml
          template:
            src: kubeadm-config.yml
            dest: /tmp/kubeadm-config.yml
            owner: root
            group: root
            mode: 0644

        # kubeadm initの実行
        - name: kubeadm init
          shell: "bash -lc 'kubeadm init --ignore-preflight-errors  Swap --config /tmp/kubeadm-config.yml'"
          register: kubernetes_init_register
          check_mode: no
          changed_when: false

      when: not kubernetes_state.stat.exists

    # rootユーザーがkubectlを実行できるようにする
    - name: "create directory /root/.kube"
      file:
        path: "/root/.kube"
        owner: root
        group: root
        mode: 0755
        state: directory

    - name: Allow root users to use kubectl /etc/kubernetes/admin.conf copy
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "/root/.kube/config"
        remote_src: true
        owner: root
        group: root

    # 指定ユーザーがkubectlを実行できるようにする
    - name: "create directory /home/{{ item }}/.kube"
      file:
        path: "/home/{{ item }}/.kube"
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: 0755
        state: directory
      with_items:
        - "{{ kubernetes_execute_users }}"

    - name: Allow users to use kubectl /etc/kubernetes/admin.conf copy
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ item }}/.kube/config"
        remote_src: true
        owner: "{{ item }}"
        group: "{{ item }}"
      with_items:
        - "{{ kubernetes_execute_users }}"

    # Masterノードにもデプロイしたい場合の対応
    - name: kubernetes set master deploy set
      shell: "bash -lc 'kubectl taint nodes {{ kubernetes_hostname }} node-role.kubernetes.io/master:NoSchedule-'"
      check_mode: no
      changed_when: false
      when:
        - kubernetes_master_deploy_flag
      ignore_errors: yes

  when: kubernetes_master_flag
